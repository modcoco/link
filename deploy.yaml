apiVersion: networking.istio.io/v1
kind: Gateway
metadata:
  name: chess-gateway
  namespace: chess
spec:
  selector:
    istio: ingressgateway # 使用 Istio 默认的 ingress gateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*" # 允许所有主机访问
---
apiVersion: networking.istio.io/v1
kind: VirtualService
metadata:
  name: my-virtualservice
  namespace: chess
spec:
  hosts:
    - "*" # 匹配所有主机
  gateways:
    - chess-gateway # 关联上面创建的 Gateway
  http:
    - match:
        - uri:
            prefix: / # 匹配根路径
      route:
        - destination:
            host: link-svc.chess.svc.cluster.local # 路由到 Service
            port:
              number: 3000 # 服务端口
---
apiVersion: v1
kind: Service
metadata:
  name: link-svc # kubectl port-forward svc/link-svc 3000:3000
  namespace: chess
spec:
  selector:
    app: chess-link # 匹配 Pod 的标签
  ports:
    - protocol: TCP
      port: 3000 # Service 端口
      targetPort: 3000 # Pod 端口
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: link-deployment
  namespace: chess
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chess-link # 匹配 Pod 的标签
  template:
    metadata:
      labels:
        app: chess-link # Pod 的标签
    spec:
      containers:
        - name: link
          image: modco/link:20240126
          ports:
            - containerPort: 3000